name: Memory Benchmark

on: [push]

jobs:
  memory-benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Nomad
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y nomad
          echo "nomad_version: $(nomad -v)"

      - name: Start a Nomad Agent agent
        run: |
          sudo nomad agent -dev -config nomad/development.hcl &>/dev/null &

      - name: Wait for initializing...
        timeout-minutes: 5
        run: |
          TIME=0
          until nomad node status > /dev/null; do
            if [ $TIME -gt 60 ]; then
              echo 'Nomad is not booted after 60 seconds, kill...'
              if [ -n "$(pidof nomad)" ]; then sudo kill "$(pidof nomad)"; fi
              sudo nomad agent -dev -config nomad/development.hcl &>/dev/null &
              TIME=0
            fi
            ((TIME+=1))
            sleep 1; done;

      - name: Run a Nomad job
        run: |
          nomad job run -detach jobs/development/mysql.nomad
          nomad job run -detach jobs/development/memcached.nomad
          nomad job run -detach jobs/development/fastcgi.nomad
          nomad job run -detach jobs/development/http.nomad
          nomad job run -detach jobs/development/restbase.nomad
          nomad job run -detach jobs/development/mathoid.nomad

      - name: Access MediaWiki until success
        timeout-minutes: 5
        run: |
          echo 'Waiting for http...'
          until curl -sLfo /dev/null localhost:8080; do
            sleep 1; done

      - name: Import pages
        run: |
          curl -OL 'https://github.com/lens0021/snippets/raw/master/dummy.sql.gz'
          gzip -d dummy.sql.gz
          nomad alloc exec -task mysql -i -job mysql mysql -uroot -plocalfemiwikipassword -Dfemiwiki < dummy.sql

      - name: Random access
        run: |
          end=$((SECONDS+180))
          while [ $SECONDS -lt $end ]; do
            NUM="$(shuf -i 1-15000 -n 1)"
            curl -sLo /dev/null "localhost:8080/w/${NUM}"
            curl -sLo /dev/null "localhost:8080/w/Special:MostLinked?limit=5000&offset=${NUM}"
          done

      - run: docker stats --no-stream

      - name: backup of accessing
        if: ${{ failure() }}
        run: |
          echo 'Failed to connect to localhost:8080';
          function header {
            line="--------------------------------------------------------"
            echo -e "$line\n$1\n$line"
          }
          header "journalctl"
          journalctl -u nomad
          header "docker images"
          docker image ls --no-trunc
          header "nomad status"
          nomad status
          for JOB in mysql memcached fastcgi http restbase mathoid; do
            header "nomad job '$JOB' status"
            nomad job status "$JOB"
            allocs=$(nomad job status "$JOB" | awk '/Allocations/,0' | tail -n +3 | awk '{if($6=="failed")print $1}')
            for ALLOC in $allocs; do
              header "[$JOB] Allocation '$ALLOC' status"
              nomad alloc status "$ALLOC";
              task=$(nomad alloc status -short "$ALLOC" | tail -n1 | awk '{print $1}')
              header "[$JOB] Allocation '$ALLOC' stdout logs "
              nomad alloc logs "$ALLOC" $task;
              header "[$JOB] Allocation '$ALLOC' stderr logs "
              nomad alloc logs -stderr "$ALLOC" $task;
            done
          done
          curl -sSLv localhost:8080 || true
