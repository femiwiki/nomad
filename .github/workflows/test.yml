name: Lint and test

on: [push, pull_request]

jobs:
  lint:
    name: PHP lint
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup PHP Action
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - run: |
        composer install --prefer-source --quiet --no-interaction
        composer test

  docker_image:
    name: Test Nomad job specification
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    - name: Edit configuration
      run: |
        mv configs/secret.php.example configs/secret.php
        sed -i -r 's/localhost/127.0.0.1/' configs/secret.php
        mv nomad/development.example.hcl nomad/development.hcl
        sed -i -r "s#/path/to/configs#${PWD}/configs#" nomad/development.hcl

    - name: Install Nomad and Consul
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install -y nomad consul

    - name: Start a Nomad Agent and a Consul agent
      run: |
        sudo nomad agent -dev-connect -config nomad/development.hcl &
        consul agent -dev &
        # Wait for initializing...
        sleep 10;

    - name: Run a Nomad job
      run: nomad job run development.nomad

    - name: Access localhost until success
      timeout-minutes: 10
      run: |
        printf 'Waiting for http...'
        until curl -sLfo /dev/null localhost; do
          sleep 1;
          printf '.';
        done; printf '\n'
    # TODO port to Nomad
    # - name: backup of accessing
    #   if: ${{ failure() }}
    #   run: |
    #     echo 'Failed to connect to localhost';
    #     docker ps;
    #     for s in $(docker service ls -q ); do docker service ps "$s"; done
    #     docker container ps;
    #     for s in $(docker service ls -q ); do docker service logs "$s"; done
    - name: Try to access the mediawiki
      run: curl -sSLvo /dev/null localhost
