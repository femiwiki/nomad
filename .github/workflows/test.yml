name: Test

on: [push, pull_request]

jobs:
  docker_image:
    name: Test Nomad job specification
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Edit configuration
        run: |
          mv configs/secret.php.example configs/secret.php
          sed -i -r 's/localhost/127.0.0.1/' configs/secret.php
          mv nomad/development.example.hcl nomad/development.hcl
          sed -i -r "s#/path/to/configs#${PWD}/configs#" nomad/development.hcl

      - name: Install Nomad and Consul
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y nomad consul
          echo "::set-output name=consul_version::$(consul -v)"
          echo "::set-output name=nomad_version::$(nomad -v)"

      - name: Start a Nomad Agent and a Consul agent
        run: |
          sudo nomad agent -dev-connect -config nomad/development.hcl &
          consul agent -dev &
          # Wait for initializing...
          until consul members &> /dev/null; do
            sleep 1;
          done;

      - name: Run a Nomad job
        run: nomad job run nomad/development.nomad

      - name: Access localhost until success
        timeout-minutes: 10
        run: |
          until curl -sLfo /dev/null localhost; do
            sleep 1;
          done;
      - name: backup of accessing
        if: ${{ failure() }}
        run: |
          echo 'Failed to connect to localhost';
          nomad job status
          nomad job status mediawiki
          line='--------------------------------------------------------'
          allocs=$(nomad job status mediawiki | awk '/Allocations/,0' | tail -n +3 | awk '{if($6=="failed")print $1}')
          for s in $allocs; do
            echo "Allocation $s status $line";
            nomad alloc status "$s";
            task=$(nomad alloc status -short "$s" | tail -n1 | awk '{print $1}')
            echo "Allocation $s stdout logs $line";
            nomad alloc logs "$s" $task;
            echo "Allocation $s stderr logs $line";
            nomad alloc logs -stderr "$s" $task;
          done
          echo "curl $line";
          curl -sSLv localhost
      - name: Try to access the mediawiki
        run: curl -sSLvo /dev/null localhost
      - name: Test VisualEditor API
        run: curl -sSLvo /dev/null "http://localhost/api.php?action=visualeditor&format=json&page=main_page&paction=parse&wikitext='''foo'''"
