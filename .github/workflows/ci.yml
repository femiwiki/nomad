name: Lint

on: [push, pull_request]

jobs:
  tf-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Format
        run: terraform -chdir=terraform fmt -check -diff -recursive

  hcl-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.3'

      - name: Install hclfmt
        run: go get -u 'github.com/hashicorp/hcl/v2/cmd/hclfmt'

      - name: Run hclfmt
        run: |
          for f in **/*.{nomad,hcl}; do
            hclfmt \
              -check \
              -require-no-change \
              -w \
              "$f"
          done

  caddy-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run caddy fmt
        run: |
          cd caddy
          for $CADDYFILE in *; do
            cp $CADDYFILE Caddyfile.orig
            docker run -v "$PWD/$CADDYFILE":/srv/Caddyfile caddy \
              caddy fmt --overwrite
            diff Caddyfile.orig $CADDYFILE
          done

  # This name is used by status check requirement
  before-cd-test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Install Nomad and Consul
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y nomad consul
          echo "nomad_version: $(nomad -v)"
          echo "consul_version: $(consul -v)"

      - name: Validate job files
        run: |
          for job in jobs/*.nomad; do
            nomad job validate "$job";
          done

      - name: Start a Nomad Agent and a Consul agent
        run: |
          sudo nomad agent -dev-connect -config nomad/development.hcl &>/dev/null &
          consul agent -dev -bootstrap &>/dev/null &

      - name: Wait for initializing...
        timeout-minutes: 5
        run: |
          TIME=0
          until nomad node status > /dev/null; do
            if [ $TIME -gt 60 ]; then
              echo 'Nomad is not booted after 60 seconds, kill...'
              if [ -n "$(pidof nomad)" ]; then sudo kill "$(pidof nomad)"; fi
              sudo nomad agent -dev-connect -config nomad/development.hcl &>/dev/null &
              TIME=0
            fi
            ((TIME+=1))
            sleep 1; done;
          NODE_ID="$(nomad node status -self | head -1 | awk '{print $3}')"
          until [[ $(curl -s "http://127.0.0.1:4646/v1/node/$NODE_ID") = *"consul.version"* ]]; do
            sleep 1; done;

      - name: Run a Nomad job
        run: |
          nomad job run jobs/development/mysql.nomad
          nomad job run jobs/development/memcached.nomad
          nomad job run jobs/development/fastcgi.nomad
          nomad job run jobs/development/http.nomad
          nomad job run jobs/development/restbase.nomad
          nomad job run jobs/development/mathoid.nomad

      - name: Access MediaWiki until success
        timeout-minutes: 5
        run: |
          echo 'Waiting for http...'
          until curl -sLfo /dev/null localhost:8080; do
            sleep 1; done

      - name: Test VisualEditor API
        run: |
          curl -sSLvo /dev/null "http://localhost:8080/api.php?action=visualeditor&page=arbitrary_page&paction=parse&wikitext=arbitrary"
          curl -sSLvo /dev/null "http://localhost:8080/localhost/v1/"

      - name: backup of accessing
        if: ${{ failure() }}
        run: |
          echo 'Failed to connect to localhost:8080';
          function header {
            line="--------------------------------------------------------"
            echo -e "$line\n$1\n$line"
          }
          header "journalctl"
          journalctl -u nomad
          header "docker images"
          docker image ls --no-trunc
          header "nomad status"
          nomad status
          for JOB in mysql memcached fastcgi http restbase mathoid; do
            header "nomad job '$JOB' status"
            nomad job status "$JOB"
            allocs=$(nomad job status "$JOB" | awk '/Allocations/,0' | tail -n +3 | awk '{if($6=="failed")print $1}')
            for ALLOC in $allocs; do
              header "[$JOB] Allocation '$ALLOC' status"
              nomad alloc status "$ALLOC";
              task=$(nomad alloc status -short "$ALLOC" | tail -n1 | awk '{print $1}')
              header "[$JOB] Allocation '$ALLOC' stdout logs "
              nomad alloc logs "$ALLOC" $task;
              header "[$JOB] Allocation '$ALLOC' stderr logs "
              nomad alloc logs -stderr "$ALLOC" $task;
            done
          done
          curl -sSLv localhost:8080 || true
